plugins {
	id 'fabric-loom' version '1.6.+'
	id 'maven-publish'
}

group = project.maven_group
version = "${project.mod_version}+${project.minecraft_version}"
archivesBaseName = project.archives_base_name

repositories {
	mavenCentral()
	maven {
		name = "Quilt Mappings"
		url = "https://maven.quiltmc.org/repository/release"
	}
	maven {
		name 'TerraformersMC'
		url 'https://maven.terraformersmc.com/'
		content {
			includeGroup 'com.terraformersmc'
		}
	}
	maven { url "https://maven.shedaniel.me/" }
}

loom {
	accessWidenerPath = file("src/main/resources/lambdabettergrass.accesswidener")
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

	modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}") {
		transitive = false
	}
}

java {
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21

	withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	it.options.release.set 21
}

processResources {
	inputs.property 'version', project.version

	filesMatching('fabric.mod.json') {
		expand 'version': project.version
	}
}

jar {
	from('LICENSE') {
		rename { "${it}_${project.archivesBaseName}" }
	}
	from('LICENSE.LambdaBetterGrass') {
		rename { "${it}_LambdaBetterGrass" }
	}
}

// Configure the maven publication.
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}
